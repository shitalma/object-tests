<project name="object-tests" default = "run-tests">
    <property name="test-dir" location="test"/>
    <property name="build" location="build"/>
    <property name="src" location="src"/>

    <target name="starting">
        <mkdir dir="${build}/test"/>
        <mkdir dir="${build}/src"/>
        <mkdir dir="${build}/code-coverage/instrumented"/>
        <mkdir dir="${build}/code-coverage/reports/xml"/>
        <mkdir dir="${build}/code-coverage/reports/html"/>
        <mkdir dir="${build}/code-coverage/coverage/xml"/>
        <mkdir dir="${build}/code-coverage/coverage/html"/>
        <mkdir dir="${build}/code-coverage/coverage/summary-xml"/>
    </target>

    <path id="cobertura.classpath">
        <fileset dir="externalLib">
            <include name="cobertura-2.0.3.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="compile-source" depends="starting">
        <javac srcdir="${src}" destdir="${build}/src" debug="yes" includeantruntime="false">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <target name="compile-tests" depends="compile-source">
        <javac srcdir="${test-dir}" destdir="${build}/test"
               classpath="${build}/src;externalLib/junit-4.10.jar" debug="yes" includeantruntime="false">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <target name="instrument">
        <delete file="cobertura.ser"/>
        <delete dir="build/code-coverage/instrumented" />

        <cobertura-instrument>
            <fileset dir="build/src">
                <include name="**/*.class" />

            </fileset>
        </cobertura-instrument>
    </target>


    <target name="run-tests">
        <junit fork="yes" dir="." failureProperty="test.failed">
            <classpath>
                <pathelement location="build/code-coverage/instrumented"/>
                <pathelement location="build/src" />
                <pathelement location="build/test" />
                <pathelement location="externalLib/junit-4.10.jar"/>
            </classpath>

            <classpath refid= "cobertura.classpath"/>

            <formatter type="xml" />
            <test name="testcase" todir="build/code-coverage/reports/xml" if="testcase" />
            <batchtest todir="build/code-coverage/reports/xml" unless="testcase">
                <fileset dir="test" >
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="build/code-coverage/reports/xml">
            <fileset dir="build/code-coverage/reports/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="build/code-coverage/reports/html" />
        </junitreport>
    </target>

    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>
    <target name="coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/xml" format="xml" />
    </target>

    <target name="summary-coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/summaryxml" format="summaryXml" />
    </target>

    <target name="alternate-coverage-report">
        <cobertura-report destdir="build/code-coverage/coverage/html">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <target name="coverage"
            depends="compile-source,compile-tests,instrument,run-tests,coverage-report,summary-coverage-report,alternate-coverage-report"
            description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports.">
    </target>
    <target name="clean">
        <delete dir="build"/>
    </target>
</project>